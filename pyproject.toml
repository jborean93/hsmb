[build-system]
requires = [
    "setuptools >= 61.0.0", # Support for setuptools config in pyproject.toml
]
build-backend = "setuptools.build_meta"

[project]
name = "hsmb"
description = "Sans-IO implementation for the SMB protocol"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Jordan Borean", email = "jborean93@gmail.com" }]
keywords = ["smb", "cifs", "samba", "hyper"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "cryptography >= 36.0",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/jborean93/hsmb"

[project.optional-dependencies]
dev = [
    # Support for source_pkgs
    "coverage[toml] >= 5.3",
    "black == 24.8.0",
    "isort == 5.13.2",
    "mypy == 1.11.1",
    "pre-commit",
    "pytest",
    "pytest-xdist",
    "tox >= 4.0.0"
]

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.paths]
source = ["src", ".tox/py*/**/site-packages"]

[tool.coverage.run]
branch = true
# Needed as tests run with a different cwd, env is set in tox
data_file = "${PROJECT_ROOT}/.coverage"
disable_warnings = ["module-not-imported", "no-data-collected"]
source_pkgs = ["hsmb"]
omit = ["*/hsmb/_version.py"]
parallel = true

[tool.coverage.report]
skip_covered = true
show_missing = true

[tool.isort]
profile = "black"

[tool.mypy]
exclude = "docs/|build/"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
python_version = "3.9"
explicit_package_bases = true
show_error_codes = true
show_column_numbers = true
disallow_any_unimported = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
testpaths = "tests"
junit_family = "xunit2"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "hsmb._version.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
sanskrb5 = ["py.typed"]

[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
    sanity
    py3{9,10,11,12}-tests
min_version = 4.0

[testenv]
package = wheel
wheel_build_env = .pkg

extras =
    dev
install_command = python -Im pip install --no-compile {opts} {packages}

passenv =
    PYTEST_ADDOPTS
set_env =
    # Needed for testing coverage
    tests: COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
    tests: PROJECT_ROOT={toxinidir}

commands_pre =
    tests: python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'

commands =
    sanity: python -m black . --check
    sanity: python -m isort . --check-only
    sanity: python -m mypy .

    tests: python -m coverage run -m pytest -v {posargs:-n auto}

commands_post =
    tests: python -m coverage combine --quiet
    tests: python -m coverage report
    tests: python -m coverage xml
"""
